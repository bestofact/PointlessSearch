{"version":3,"sources":["Components/SearchBar/SearchIcon.svg","Components/SearchBar/SearchBar.js","Components/ResultBar/ResultBar.js","Components/ResultList/ResultList.js","Components/PageNoBox/PageNoBox.js","Components/PageNoList/PageNoList.js","Utils/utils.js","Components/Main/Main.js","index.js"],"names":["_g","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgSearchIcon","_ref","svgRef","title","titleId","props","xmlns","xmlnsXlink","role","width","height","preserveAspectRatio","viewBox","ref","id","fill","d","stroke","strokeWidth","strokeLinecap","ForwardRef","SearchBar","args","className","onSubmit","searchKeyword","onInput","e","setKeyword","value","type","autoComplete","placeholder","ResultBar","result","name","body","email","ResultList","shownResults","map","PageNoBox","isSelected","onClick","setCurrentPageNo","pageNo","PageNoList","pageAmount","Array","from","x","currentPageNo","services","Main","React","useState","allData","setAllData","results","setResults","setShownResults","setPageAmount","keyword","parseShownResults","startIndex","stopIndex","slice","useEffect","fetch","then","res","json","data","Math","ceil","searchBarArgs","event","preventDefault","newResults","forEach","item","includes","push","undefined","pageNoListArgs","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d3e9b38a.chunk.js","sourcesContent":["var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSearchIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    \"aria-hidden\": \"true\",\n    role: \"img\",\n    width: \"1em\",\n    height: \"1em\",\n    preserveAspectRatio: \"xMidYMid meet\",\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"none\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M21 21l-4.486-4.494M19 10.5a8.5 8.5 0 1 1-17 0a8.5 8.5 0 0 1 17 0z\",\n    stroke: \"currentColor\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSearchIcon);\nexport default __webpack_public_path__ + \"static/media/SearchIcon.e1664b78.svg\";\nexport { ForwardRef as ReactComponent };","import './SearchBar.css';\r\nimport { ReactComponent as SearchIcon } from './SearchIcon.svg';\r\n\r\n\r\nfunction SearchBar({args})  // args : setKeyword, searchKeyword\r\n{\r\n    return (\r\n        <form className=\"search-bar\" onSubmit = {args.searchKeyword}>\r\n            <button className=\"search-button\">\r\n                <SearchIcon className = \"search-icon\" />\r\n            </button>\r\n            <input onInput={e=> args.setKeyword(e.target.value)} type = \"text\" id = \"search-input\" autoComplete = \"off\" placeholder = \"est dolore omnis\"/>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default SearchBar;\r\n","import \"./ResultBar.css\";\r\n\r\nfunction ResultBar({result})\r\n{\r\n    return (\r\n        <div className=\"result-bar\">\r\n            <span className=\"name\">{result.name}</span>\r\n            <span className=\"body\">{result.body}</span>\r\n            <span className=\"email\">{result.email}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ResultBar;","import \"./ResultList.css\";\r\nimport ResultBar from \"../ResultBar/ResultBar\";\r\n\r\nfunction ResultList({shownResults})\r\n{\r\n    return(\r\n        <div className=\"result-list\">\r\n            { \r\n                shownResults.length\r\n                ?\r\n                shownResults.map( result => <ResultBar key={result.id} result={result}/> )\r\n                :\r\n                <div>Make a search in jsonplaceholder.typicode.com/comments body parameter.</div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ResultList;","import \"./PageNoBox.css\";\r\n\r\nfunction PageNoBox({args})  // args : pageNo, setCurrentPageNo, isSelected\r\n{\r\n    // To visualize we are using pageNo+1 so pages starts from number 1.\r\n    // Since pageNo is iterated from pageAmount and pageAmount is calculated from results.length, it starts from 0.\r\n\r\n    return (\r\n        <button className={`page-no-box ${args.isSelected ? \"selected\" : \"\"}`} onClick={ ()=>args.setCurrentPageNo(args.pageNo) }>\r\n            {args.pageNo+1}\r\n        </button>\r\n    );\r\n}\r\n\r\n\r\nexport default PageNoBox;","import \"./PageNoList.css\";\r\nimport PageNoBox from \"../PageNoBox/PageNoBox\";\r\n\r\n\r\nfunction PageNoList({args}) //args : currentPageNo, setCurrentPageNo, pageAmount\r\n{    \r\n    return(\r\n        <div className=\"page-no-list\">\r\n            { \r\n                args.pageAmount\r\n                ?\r\n                Array.from({length: args.pageAmount}, (x,pageNo) => \r\n                    <PageNoBox key={pageNo} \r\n                        args =\r\n                        {\r\n                            {\r\n                            pageNo:pageNo,\r\n                            setCurrentPageNo:args.setCurrentPageNo,\r\n                            isSelected:pageNo===args.currentPageNo\r\n                            }  \r\n                        }\r\n                    />) \r\n                :\r\n                <div/>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PageNoList;","export const services={\r\n    comments : \"https://jsonplaceholder.typicode.com/comments\"\r\n}\r\n","import './Main.css';\nimport Searchbar from \"../SearchBar/SearchBar\";\nimport ResultList from \"../ResultList/ResultList\";\nimport PageNoList from '../PageNoList/PageNoList';\nimport { services } from '../../Utils/utils';\nimport React from 'react';\n\nfunction Main()\n{\n\n  const maxResultInOnePage = 5;\n\n  const [allData, setAllData] = React.useState([]);\n  const [results, setResults] = React.useState([]);\n  const [shownResults, setShownResults] = React.useState([]);\n  const [currentPageNo, setCurrentPageNo] = React.useState(0);\n  const [pageAmount, setPageAmount] = React.useState(0);\n  const [keyword, setKeyword] = React.useState(\"\");\n\n  // Fetch all data for once and all.\n  React.useEffect( ()=> { fetch(services.comments).then(res => res.json()).then(data => setAllData(data)) },[]);\n\n\n// custom functions----------------------\n  // Search keyword in allData and set results from found ones.\n  function searchKeyword(event)\n  {\n    event.preventDefault(); // prevent form submit from reloading entire page\n    \n    let newResults = [];\n    allData.forEach( item=> item.body.includes(keyword) ? newResults.push(item) : undefined);\n    setResults(newResults);\n    setCurrentPageNo(0);  // Go to first page after each search.\n  }\n  // Parse the results that we want to show in current page. \n  function parseShownResults()\n  {\n    let startIndex = currentPageNo * maxResultInOnePage;\n    let stopIndex = startIndex + maxResultInOnePage;\n    setShownResults(results.slice(startIndex,stopIndex));\n  }\n// custom functions end------------------\n\n\n// useEffects----------------------------\n  // When results updated, set new total page amount from found results amount.\n  // Also when results updated we \n  React.useEffect(()=>\n  {\n    setPageAmount(Math.ceil(results.length/maxResultInOnePage));\n    parseShownResults();\n  }, [results]);\n\n  // When currentPageNo got updated, get new show results from current page no.\n  React.useEffect(()=>\n  {\n    parseShownResults();\n  }, [currentPageNo]);  \n// useEffects end-------------------------\n\n\n// Args objects.--------------------------\n  const searchBarArgs = {\n    setKeyword : setKeyword,\n    searchKeyword: searchKeyword\n  };\n  const pageNoListArgs = {\n    currentPageNo : currentPageNo,\n    setCurrentPageNo : setCurrentPageNo,\n    pageAmount : pageAmount,\n  }\n// Args objets end------------------------\n\n\n  return (\n    <div className=\"main\">\n\n      <span className=\"title\"> Pointless Search </span>\n      <Searchbar args={searchBarArgs}/>\n\n      <div className=\"result-container\">\n        <ResultList shownResults = {shownResults} />\n        <PageNoList args = {pageNoListArgs} />\n      </div>\n      \n    </div>\n  );\n}\n\nexport default Main;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Main from './Components/Main/Main';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}